#!/usr/bin/env ruby
#
#  Created on 2008-1-22.
#  Copyright (c) 2008. All rights reserved.

begin
  require 'rubygems'
rescue LoadError
  # no rubygems to load, so we fail silently
end

require 'optparse'

OPTIONS = {
  :memcache => '127.0.0.1:22122',
  :frequency => 2,
  :verbose => false
}
MANDATORY_OPTIONS = %w( )

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
Airbrush is a dedicated job queue based image processor. Commands are added to the queue via memcache, and results posted back
via memcache. This portion of airbrush is the server component, please see the examples are of the gem for how to post and
receive results using an example client.

Usage: #{File.basename($0)} [options]

Options are:
BANNER
  opts.separator ""
  opts.on("-m", "--memcache=HOST", String,
          "The address of the memcache host to connect to",
          "Default: #{OPTIONS[:memcache]}") { |OPTIONS[:memcache]| }
  opts.on("-f", "--frequency=SECONDS", String,
          "How often the remote memcache server is polled for incoming jobs, units of seconds",
          "Default: #{OPTIONS[:frequency]}") { |OPTIONS[:frequency]| }
  opts.on("-l", "--log=file", String,
          "Specify where to send logging output",
          "Default: stdout") { |OPTIONS[:log_target]| }
  opts.on("-v", "--verbose",
          "Verbose output") { |OPTIONS[:verbose]| }
  opts.on("-h", "--help",
          "Show this help message.") { puts opts; exit }
  opts.parse!(ARGV)

  if MANDATORY_OPTIONS && MANDATORY_OPTIONS.find { |option| OPTIONS[option.to_sym].nil? }
    puts opts; exit
  end
end

# all good, lets go

require 'airbrush'
require 'daemons'

# Become a daemon
#Daemons.daemonize

server = Airbrush::Server.new(OPTIONS)
server.start
